import os
import django
import random
from datetime import date, timedelta

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'campus_registry.settings')
django.setup()

from students.models import Student
from django.contrib.auth import get_user_model
User = get_user_model()


def create_sample_students():
    first_names = ["–Ü–≤–∞–Ω", "–û–ª–µ–Ω–∞", "–ü–µ—Ç—Ä–æ", "–ú–∞—Ä—ñ—è", "–û–ª–µ–∫—Å—ñ–π", "–ê–Ω–Ω–∞", "–ê–Ω–¥—Ä—ñ–π", "–ù–∞—Ç–∞–ª—ñ—è", "–°–µ—Ä–≥—ñ–π", "–Æ–ª—ñ—è", "–î–º–∏—Ç—Ä–æ", "–¢–µ—Ç—è–Ω–∞", "–ú–∏—Ö–∞–π–ª–æ", "–ö–∞—Ç–µ—Ä–∏–Ω–∞"]
    last_names = ["–®–µ–≤—á–µ–Ω–∫–æ", "–ö–æ–≤–∞–ª–µ–Ω–∫–æ", "–ë–æ–Ω–¥–∞—Ä–µ–Ω–∫–æ", "–¢–∫–∞—á–µ–Ω–∫–æ", "–ö—Ä–∞–≤—á–µ–Ω–∫–æ", "–û–ª—ñ–π–Ω–∏–∫", "–®–µ–≤—á—É–∫", "–°–µ—Ä–≥—ñ—î–Ω–∫–æ", "–°–∞–≤—á–µ–Ω–∫–æ", "–ë–æ–Ω–¥–∞—Ä", "–õ–∏—Å–µ–Ω–∫–æ", "–ú–µ–ª—å–Ω–∏–∫"]
    middle_names = ["–û–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á", "–Ü–≤–∞–Ω–æ–≤–∏—á", "–ü–µ—Ç—Ä–æ–≤–∏—á", "–ú–∏—Ö–∞–π–ª–æ–≤–∏—á", "–í–∞—Å–∏–ª—å–æ–≤–∏—á", "–û–ª–µ–≥—ñ–≤–Ω–∞", "–Ü–≥–æ—Ä—ñ–≤–Ω–∞", "–ê–Ω–¥—Ä—ñ—ó–≤–Ω–∞", "–°–µ—Ä–≥—ñ—ó–≤–Ω–∞", "–í–æ–ª–æ–¥–∏–º–∏—Ä—ñ–≤–Ω–∞"]

    streets = ["–®–µ–≤—á–µ–Ω–∫–∞", "–§—Ä–∞–Ω–∫–∞", "–ì—Ä—É—à–µ–≤—Å—å–∫–æ–≥–æ", "–õ—ñ—Å–æ–≤–∞", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞", "–°–æ–±–æ—Ä–Ω–∞", "–ù–µ–∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ"]
    cities = ["–ö–∏—ó–≤", "–õ—å–≤—ñ–≤", "–û–¥–µ—Å–∞", "–•–∞—Ä–∫—ñ–≤", "–î–Ω—ñ–ø—Ä–æ", "–ó–∞–ø–æ—Ä—ñ–∂–∂—è", "–í—ñ–Ω–Ω–∏—Ü—è", "–ñ–∏—Ç–æ–º–∏—Ä", "–ß–µ—Ä–Ω—ñ–≥—ñ–≤", "–ü–æ–ª—Ç–∞–≤–∞"]

    institutes = [choice[0] for choice in Student.INSTITUTE_CHOICES]
    regions = [choice[0] for choice in Student.UKRAINIAN_REGIONS]
    person_types = [choice[0] for choice in Student.PERSON_TYPE_CHOICES]
    genders = [choice[0] for choice in Student.GENDER_CHOICES]
    categories = [choice[0] for choice in Student.CITY_TYPE_CHOICES]

    for i in range(20):  # üîπ —Å—Ç–≤–æ—Ä—é—î–º–æ 20 —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤
        first_name = random.choice(first_names)
        last_name = random.choice(last_names)
        middle_name = random.choice(middle_names)
        full_name = f"{last_name} {first_name} {middle_name}"

        # –í—ñ–∫ –≤—ñ–¥ 18 –¥–æ 25
        birth_year = random.randint(1998, 2005)
        birth_month = random.randint(1, 12)
        birth_day = random.randint(1, 28)
        date_of_birth = date(birth_year, birth_month, birth_day)

        phone = f"+380{random.randint(50, 99)}{random.randint(100, 999)}{random.randint(1000, 9999)}"
        institute = random.choice(institutes)
        course = random.randint(1, 6)

        enrollment_year = date(birth_year + 18, 9, 1)
        graduation_year = date(enrollment_year.year + course, 6, 30)

        region = random.choice(regions)
        city = random.choice(cities)
        address = f"–≤—É–ª. {random.choice(streets)} {random.randint(1, 200)}"

        dormitory = random.randint(1, 23)
        room_number = str(random.randint(100, 500))

        passport_data = f"AB{random.randint(100000, 999999)}"
        passport_issue_date = date(random.randint(2016, 2023), random.randint(1, 12), random.randint(1, 28))
        passport_issued_by = "–î–µ—Ä–∂–∞–≤–Ω–∞ –º—ñ–≥—Ä–∞—Ü—ñ–π–Ω–∞ —Å–ª—É–∂–±–∞ –£–∫—Ä–∞—ó–Ω–∏"

        contract_date = date(2022, random.randint(1, 12), random.randint(1, 28))
        contract_number = f"–î-{random.randint(100, 999)}"
        contract_termination_date = date(2024, random.randint(1, 12), random.randint(1, 28))

        registration_consent = random.choice([True, False])
        registration_date = date(2022, random.randint(1, 12), random.randint(1, 28))
        registration_dormitory = random.randint(1, 23)
        deregistration_date = date(2023, random.randint(1, 12), random.randint(1, 28))

        notes = random.choice(["–ó—Ä–∞–∑–∫–æ–≤–∏–π —Å—Ç—É–¥–µ–Ω—Ç", "–ü–æ—Ç—Ä–µ–±—É—î –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ–π", "–ê–∫—Ç–∏–≤–Ω–∏–π —É –≥—Ä–æ–º–∞–¥—Å—å–∫–æ–º—É –∂–∏—Ç—Ç—ñ", None])

        # üîπ –î–æ–º–∞—à–Ω—è –∞–¥—Ä–µ—Å–∞
        home_region = random.choice(regions)
        home_city = random.choice(cities)
        home_street = random.choice(streets)
        home_building = str(random.randint(1, 200))
        home_apartment = str(random.randint(1, 120))

        student = Student(
            type=random.choice(person_types),
            gender=random.choice(genders),
            category=random.choice(categories),
            full_name=full_name,
            date_of_birth=date_of_birth,
            phone=phone,
            institute=institute,
            course=course,
            enrollment_year=enrollment_year,
            graduation_year=graduation_year,
            passport_data=passport_data,
            passport_issue_date=passport_issue_date,
            passport_issued_by=passport_issued_by,
            country="–£–∫—Ä–∞—ó–Ω–∞",
            region=region,
            city=city,
            address=address,
            dormitory_number=dormitory,
            room_number=room_number,
            contract_date=contract_date,
            contract_number=contract_number,
            contract_termination_date=contract_termination_date,
            registration_consent=registration_consent,
            registration_date=registration_date,
            registration_dormitory=registration_dormitory,
            deregistration_date=deregistration_date,
            notes=notes,

            # üëá –Ω–æ–≤—ñ –ø–æ–ª—è –¥–ª—è –¥–æ–º–∞—à–Ω—å–æ—ó –∞–¥—Ä–µ—Å–∏
            home_add_country="–£–∫—Ä–∞—ó–Ω–∞",
            home_add_region=home_region,
            home_add_rajon=f"–†–∞–π–æ–Ω {random.randint(1, 20)}",
            home_add_category=random.choice(categories),
            home_add_city=home_city,
            home_add_street=f"–≤—É–ª. {home_street}",
            home_add_building=home_building,
            home_add_apartment=home_apartment,
        )

        student.save()
        print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ {student.get_type_display()} ({student.get_gender_display()}): {full_name}")


def create_custom_superusers():
    users_with_passwords = {
        "Polishchuk": "PolishchukW5",
        "Andriiovskyj": "AndriiovskyjR2",
        "Dovha": "DovhaX9",
        "Stefinko": "StefinkoQ7",
        "Nedbaliuk": "NedbaliukT3",
        "Ivaneiko": "IvaneikoL4",
        "Kos": "KosZ8",
        "Verbyana": "VerbyanaM7",
        "Nykoliak": "NykoliakJ6",
    }

    for username, password in users_with_passwords.items():
        email = f"{username.lower()}@example.com"
        if not User.objects.filter(username=username).exists():
            User.objects.create_superuser(username=username, email=email, password=password)
            print(f"üëë –°—Ç–≤–æ—Ä–µ–Ω–æ —Å—É–ø–µ—Ä—é–∑–µ—Ä–∞: {username} / {password}")
        else:
            print(f"‚ö†Ô∏è –°—É–ø–µ—Ä—é–∑–µ—Ä {username} –≤–∂–µ —ñ—Å–Ω—É—î")


if __name__ == "__main__":
    create_sample_students()
    create_custom_superusers()
    print("üéâ –ù–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
